{"high":[{"cwe_ids":["798"],"id":"javascript_express_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n app.use(\n  session({\n    secret: \"shh-my-secret\",\n    name: \"my-custom-session-name\",\n  })\n)\n```\n\n✅ Use environment variables\n\n```javascript\n app.use(\n  session({\n    secret: process.env.secret,\n    name: \"my-custom-session-name\",\n  })\n)\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_express_hardcoded_secret","line_number":146,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":146,"end":149,"column":{"start":31,"end":40}},"sink":{"start":146,"end":149,"column":{"start":31,"end":40},"content":""},"parent_line_number":146,"fingerprint":"6b81c5e32f84929b05932eb5d7e5fd93_0","old_fingerprint":"6b81c5e32f84929b05932eb5d7e5fd93_0","code_extract":"    const tmpTokenWurstbrot = jwt.sign({\n      userId: 10,\n      type: 'password_valid_needs_second_factor_token'\n    }, 'this_surly_isnt_the_right_key')"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":169,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":169,"end":169,"column":{"start":7,"end":54}},"sink":{"start":169,"end":169,"column":{"start":7,"end":54},"content":""},"parent_line_number":169,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_0","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_63","code_extract":"      password: 'EinBelegtesBrotMitSchinkenSCHINKEN!',"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":170,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":170,"end":170,"column":{"start":7,"end":53}},"sink":{"start":170,"end":170,"column":{"start":7,"end":53},"content":""},"parent_line_number":170,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_1","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_64","code_extract":"      totpSecret: 'IFTXE3SPOEYVURT2MRYGI52TKJ4HC3KH'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":195,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":195,"end":195,"column":{"start":7,"end":50}},"sink":{"start":195,"end":195,"column":{"start":7,"end":50},"content":""},"parent_line_number":195,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_2","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_71","code_extract":"      password: '0Y8rMnww$*9VFYE§59-!Fg1L6t\u00266lB'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":231,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":231,"end":231,"column":{"start":5,"end":30}},"sink":{"start":231,"end":231,"column":{"start":5,"end":30},"content":""},"parent_line_number":231,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_3","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_75","code_extract":"    const password = '123456'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":233,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":233,"end":233,"column":{"start":5,"end":42}},"sink":{"start":233,"end":233,"column":{"start":5,"end":42},"content":""},"parent_line_number":233,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_4","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_76","code_extract":"    const secret = 'ASDVAJSDUASZGDIADBJS'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":277,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":277,"end":277,"column":{"start":5,"end":30}},"sink":{"start":277,"end":277,"column":{"start":5,"end":30},"content":""},"parent_line_number":277,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_5","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_81","code_extract":"    const password = '123456'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":279,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":279,"end":279,"column":{"start":5,"end":42}},"sink":{"start":279,"end":279,"column":{"start":5,"end":42},"content":""},"parent_line_number":279,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_6","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_82","code_extract":"    const secret = 'ASDVAJSDUASZGDIADBJS'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":293,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":293,"end":293,"column":{"start":11,"end":64}},"sink":{"start":293,"end":293,"column":{"start":11,"end":64},"content":""},"parent_line_number":293,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_7","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_85","code_extract":"          password: password + ' this makes the password wrong',"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":306,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":306,"end":306,"column":{"start":5,"end":30}},"sink":{"start":306,"end":306,"column":{"start":5,"end":30},"content":""},"parent_line_number":306,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_8","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_86","code_extract":"    const password = '123456'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":308,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":308,"end":308,"column":{"start":5,"end":42}},"sink":{"start":308,"end":308,"column":{"start":5,"end":42},"content":""},"parent_line_number":308,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_9","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_87","code_extract":"    const secret = 'ASDVAJSDUASZGDIADBJS'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":335,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":335,"end":335,"column":{"start":5,"end":30}},"sink":{"start":335,"end":335,"column":{"start":5,"end":30},"content":""},"parent_line_number":335,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_10","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_91","code_extract":"    const password = '123456'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":337,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":337,"end":337,"column":{"start":5,"end":42}},"sink":{"start":337,"end":337,"column":{"start":5,"end":42},"content":""},"parent_line_number":337,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_11","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_92","code_extract":"    const secret = 'ASDVAJSDUASZGDIADBJS'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":364,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":364,"end":364,"column":{"start":5,"end":59}},"sink":{"start":364,"end":364,"column":{"start":5,"end":59},"content":""},"parent_line_number":364,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_12","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_93","code_extract":"    const password = 'EinBelegtesBrotMitSchinkenSCHINKEN!'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":365,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":365,"end":365,"column":{"start":5,"end":58}},"sink":{"start":365,"end":365,"column":{"start":5,"end":58},"content":""},"parent_line_number":365,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_13","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_94","code_extract":"    const totpSecret = 'IFTXE3SPOEYVURT2MRYGI52TKJ4HC3KH'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":380,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":380,"end":380,"column":{"start":13,"end":31}},"sink":{"start":380,"end":380,"column":{"start":13,"end":31},"content":""},"parent_line_number":380,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_14","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_95","code_extract":"            secret: totpSecret,"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":393,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":393,"end":393,"column":{"start":5,"end":30}},"sink":{"start":393,"end":393,"column":{"start":5,"end":30},"content":""},"parent_line_number":393,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_15","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_96","code_extract":"    const password = '123456'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":394,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":394,"end":394,"column":{"start":5,"end":46}},"sink":{"start":394,"end":394,"column":{"start":5,"end":46},"content":""},"parent_line_number":394,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_16","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_97","code_extract":"    const totpSecret = 'ASDVAJSDUASZGDIADBJS'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":430,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":430,"end":430,"column":{"start":5,"end":30}},"sink":{"start":430,"end":430,"column":{"start":5,"end":30},"content":""},"parent_line_number":430,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_17","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_98","code_extract":"    const password = '123456'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":431,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":431,"end":431,"column":{"start":5,"end":46}},"sink":{"start":431,"end":431,"column":{"start":5,"end":46},"content":""},"parent_line_number":431,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_18","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_99","code_extract":"    const totpSecret = 'ASDVAJSDUASZGDIADBJS'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":452,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":452,"end":452,"column":{"start":11,"end":64}},"sink":{"start":452,"end":452,"column":{"start":11,"end":64},"content":""},"parent_line_number":452,"fingerprint":"0e56f6210b9e8df68b9622944f0be985_19","old_fingerprint":"0e56f6210b9e8df68b9622944f0be985_100","code_extract":"          password: password + ' this makes the password wrong'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":20,"full_filename":"test\\api\\addressApiSpec.ts","filename":"test\\api\\addressApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":20,"end":20,"column":{"start":7,"end":27}},"sink":{"start":20,"end":20,"column":{"start":7,"end":27},"content":""},"parent_line_number":20,"fingerprint":"6438317e4d21ef7d5983ab58933ebde7_0","old_fingerprint":"6438317e4d21ef7d5983ab58933ebde7_4","code_extract":"      password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":25,"full_filename":"test\\api\\basketApiSpec.ts","filename":"test\\api\\basketApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":25,"end":25,"column":{"start":7,"end":27}},"sink":{"start":25,"end":25,"column":{"start":7,"end":27},"content":""},"parent_line_number":25,"fingerprint":"e9cc2f846d35ddb2303fa3add0d83608_0","old_fingerprint":"e9cc2f846d35ddb2303fa3add0d83608_10","code_extract":"      password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":101,"full_filename":"test\\api\\basketApiSpec.ts","filename":"test\\api\\basketApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":101,"end":101,"column":{"start":9,"end":57}},"sink":{"start":101,"end":101,"column":{"start":9,"end":57},"content":""},"parent_line_number":101,"fingerprint":"e9cc2f846d35ddb2303fa3add0d83608_1","old_fingerprint":"e9cc2f846d35ddb2303fa3add0d83608_41","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":21,"full_filename":"test\\api\\basketItemApiSpec.ts","filename":"test\\api\\basketItemApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":21,"end":21,"column":{"start":7,"end":27}},"sink":{"start":21,"end":21,"column":{"start":7,"end":27},"content":""},"parent_line_number":21,"fingerprint":"ab34aac53fb527679f968f1227e5e5fd_0","old_fingerprint":"ab34aac53fb527679f968f1227e5e5fd_6","code_extract":"      password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":22,"full_filename":"test\\api\\dataExportApiSpec.ts","filename":"test\\api\\dataExportApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":22,"end":22,"column":{"start":9,"end":57}},"sink":{"start":22,"end":22,"column":{"start":9,"end":57},"content":""},"parent_line_number":22,"fingerprint":"193cfc850cd9de9b1f90e60d714200df_0","old_fingerprint":"193cfc850cd9de9b1f90e60d714200df_8","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":49,"full_filename":"test\\api\\dataExportApiSpec.ts","filename":"test\\api\\dataExportApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":49,"end":49,"column":{"start":9,"end":57}},"sink":{"start":49,"end":49,"column":{"start":9,"end":57},"content":""},"parent_line_number":49,"fingerprint":"193cfc850cd9de9b1f90e60d714200df_1","old_fingerprint":"193cfc850cd9de9b1f90e60d714200df_18","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":78,"full_filename":"test\\api\\dataExportApiSpec.ts","filename":"test\\api\\dataExportApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":78,"end":78,"column":{"start":9,"end":57}},"sink":{"start":78,"end":78,"column":{"start":9,"end":57},"content":""},"parent_line_number":78,"fingerprint":"193cfc850cd9de9b1f90e60d714200df_2","old_fingerprint":"193cfc850cd9de9b1f90e60d714200df_30","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":113,"full_filename":"test\\api\\dataExportApiSpec.ts","filename":"test\\api\\dataExportApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":113,"end":113,"column":{"start":9,"end":45}},"sink":{"start":113,"end":113,"column":{"start":9,"end":45},"content":""},"parent_line_number":113,"fingerprint":"193cfc850cd9de9b1f90e60d714200df_3","old_fingerprint":"193cfc850cd9de9b1f90e60d714200df_47","code_extract":"        password: 'K1f.....................'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":153,"full_filename":"test\\api\\dataExportApiSpec.ts","filename":"test\\api\\dataExportApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":153,"end":153,"column":{"start":9,"end":29}},"sink":{"start":153,"end":153,"column":{"start":9,"end":29},"content":""},"parent_line_number":153,"fingerprint":"193cfc850cd9de9b1f90e60d714200df_4","old_fingerprint":"193cfc850cd9de9b1f90e60d714200df_60","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":195,"full_filename":"test\\api\\dataExportApiSpec.ts","filename":"test\\api\\dataExportApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":195,"end":195,"column":{"start":9,"end":29}},"sink":{"start":195,"end":195,"column":{"start":9,"end":29},"content":""},"parent_line_number":195,"fingerprint":"193cfc850cd9de9b1f90e60d714200df_5","old_fingerprint":"193cfc850cd9de9b1f90e60d714200df_70","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":235,"full_filename":"test\\api\\dataExportApiSpec.ts","filename":"test\\api\\dataExportApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":235,"end":235,"column":{"start":9,"end":45}},"sink":{"start":235,"end":235,"column":{"start":9,"end":45},"content":""},"parent_line_number":235,"fingerprint":"193cfc850cd9de9b1f90e60d714200df_6","old_fingerprint":"193cfc850cd9de9b1f90e60d714200df_77","code_extract":"        password: 'K1f.....................'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":283,"full_filename":"test\\api\\dataExportApiSpec.ts","filename":"test\\api\\dataExportApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":283,"end":283,"column":{"start":9,"end":29}},"sink":{"start":283,"end":283,"column":{"start":9,"end":29},"content":""},"parent_line_number":283,"fingerprint":"193cfc850cd9de9b1f90e60d714200df_7","old_fingerprint":"193cfc850cd9de9b1f90e60d714200df_83","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":333,"full_filename":"test\\api\\dataExportApiSpec.ts","filename":"test\\api\\dataExportApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":333,"end":333,"column":{"start":9,"end":29}},"sink":{"start":333,"end":333,"column":{"start":9,"end":29},"content":""},"parent_line_number":333,"fingerprint":"193cfc850cd9de9b1f90e60d714200df_8","old_fingerprint":"193cfc850cd9de9b1f90e60d714200df_90","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":23,"full_filename":"test\\api\\deliveryApiSpec.ts","filename":"test\\api\\deliveryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":23,"end":23,"column":{"start":11,"end":31}},"sink":{"start":23,"end":23,"column":{"start":11,"end":31},"content":""},"parent_line_number":23,"fingerprint":"77dff289140e52219ae5a5a498faddf5_0","old_fingerprint":"77dff289140e52219ae5a5a498faddf5_9","code_extract":"          password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":52,"full_filename":"test\\api\\deliveryApiSpec.ts","filename":"test\\api\\deliveryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":52,"end":52,"column":{"start":11,"end":83}},"sink":{"start":52,"end":52,"column":{"start":11,"end":83},"content":""},"parent_line_number":52,"fingerprint":"77dff289140e52219ae5a5a498faddf5_1","old_fingerprint":"77dff289140e52219ae5a5a498faddf5_19","code_extract":"          password: 'mDLx?94T~1CfVfZMzw@sJ9f?s3L6lbMqE70FfI8^54jbNikY5fymx7c!YbJb'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":83,"full_filename":"test\\api\\deliveryApiSpec.ts","filename":"test\\api\\deliveryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":83,"end":83,"column":{"start":11,"end":31}},"sink":{"start":83,"end":83,"column":{"start":11,"end":31},"content":""},"parent_line_number":83,"fingerprint":"77dff289140e52219ae5a5a498faddf5_2","old_fingerprint":"77dff289140e52219ae5a5a498faddf5_33","code_extract":"          password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":111,"full_filename":"test\\api\\deliveryApiSpec.ts","filename":"test\\api\\deliveryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":111,"end":111,"column":{"start":11,"end":83}},"sink":{"start":111,"end":111,"column":{"start":11,"end":83},"content":""},"parent_line_number":111,"fingerprint":"77dff289140e52219ae5a5a498faddf5_3","old_fingerprint":"77dff289140e52219ae5a5a498faddf5_45","code_extract":"          password: 'mDLx?94T~1CfVfZMzw@sJ9f?s3L6lbMqE70FfI8^54jbNikY5fymx7c!YbJb'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":35,"full_filename":"test\\api\\deluxeApiSpec.ts","filename":"test\\api\\deluxeApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":35,"end":35,"column":{"start":9,"end":45}},"sink":{"start":35,"end":35,"column":{"start":9,"end":45},"content":""},"parent_line_number":35,"fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_0","old_fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_13","code_extract":"        password: 'OhG0dPlease1nsertLiquor!'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":53,"full_filename":"test\\api\\deluxeApiSpec.ts","filename":"test\\api\\deluxeApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":53,"end":53,"column":{"start":9,"end":81}},"sink":{"start":53,"end":53,"column":{"start":9,"end":81},"content":""},"parent_line_number":53,"fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_1","old_fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_21","code_extract":"        password: 'mDLx?94T~1CfVfZMzw@sJ9f?s3L6lbMqE70FfI8^54jbNikY5fymx7c!YbJb'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":71,"full_filename":"test\\api\\deluxeApiSpec.ts","filename":"test\\api\\deluxeApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":71,"end":71,"column":{"start":9,"end":29}},"sink":{"start":71,"end":71,"column":{"start":9,"end":29},"content":""},"parent_line_number":71,"fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_2","old_fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_27","code_extract":"        password: 'admin123'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":89,"full_filename":"test\\api\\deluxeApiSpec.ts","filename":"test\\api\\deluxeApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":89,"end":89,"column":{"start":9,"end":47}},"sink":{"start":89,"end":89,"column":{"start":9,"end":47},"content":""},"parent_line_number":89,"fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_3","old_fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_34","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":105,"full_filename":"test\\api\\deluxeApiSpec.ts","filename":"test\\api\\deluxeApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":105,"end":105,"column":{"start":7,"end":43}},"sink":{"start":105,"end":105,"column":{"start":7,"end":43},"content":""},"parent_line_number":105,"fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_4","old_fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_42","code_extract":"      password: 'OhG0dPlease1nsertLiquor!'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":129,"full_filename":"test\\api\\deluxeApiSpec.ts","filename":"test\\api\\deluxeApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":129,"end":129,"column":{"start":7,"end":27}},"sink":{"start":129,"end":129,"column":{"start":7,"end":27},"content":""},"parent_line_number":129,"fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_5","old_fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_52","code_extract":"      password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":149,"full_filename":"test\\api\\deluxeApiSpec.ts","filename":"test\\api\\deluxeApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":149,"end":149,"column":{"start":9,"end":81}},"sink":{"start":149,"end":149,"column":{"start":9,"end":81},"content":""},"parent_line_number":149,"fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_6","old_fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_59","code_extract":"        password: 'mDLx?94T~1CfVfZMzw@sJ9f?s3L6lbMqE70FfI8^54jbNikY5fymx7c!YbJb'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":170,"full_filename":"test\\api\\deluxeApiSpec.ts","filename":"test\\api\\deluxeApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":170,"end":170,"column":{"start":9,"end":29}},"sink":{"start":170,"end":170,"column":{"start":9,"end":29},"content":""},"parent_line_number":170,"fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_7","old_fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_65","code_extract":"        password: 'admin123'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":191,"full_filename":"test\\api\\deluxeApiSpec.ts","filename":"test\\api\\deluxeApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":191,"end":191,"column":{"start":9,"end":47}},"sink":{"start":191,"end":191,"column":{"start":9,"end":47},"content":""},"parent_line_number":191,"fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_8","old_fingerprint":"b8e19c18e49e5686cbaeec934d8eaa5b_69","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":18,"full_filename":"test\\api\\erasureRequestApiSpec.ts","filename":"test\\api\\erasureRequestApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":18,"end":18,"column":{"start":9,"end":63}},"sink":{"start":18,"end":18,"column":{"start":9,"end":63},"content":""},"parent_line_number":18,"fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_0","old_fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_1","code_extract":"        password: 'kitten lesser pooch karate buffoon indoors'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":37,"full_filename":"test\\api\\erasureRequestApiSpec.ts","filename":"test\\api\\erasureRequestApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":37,"end":37,"column":{"start":9,"end":57}},"sink":{"start":37,"end":37,"column":{"start":9,"end":57},"content":""},"parent_line_number":37,"fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_1","old_fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_14","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":64,"full_filename":"test\\api\\erasureRequestApiSpec.ts","filename":"test\\api\\erasureRequestApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":64,"end":64,"column":{"start":9,"end":57}},"sink":{"start":64,"end":64,"column":{"start":9,"end":57},"content":""},"parent_line_number":64,"fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_2","old_fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_25","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":80,"full_filename":"test\\api\\erasureRequestApiSpec.ts","filename":"test\\api\\erasureRequestApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":80,"end":80,"column":{"start":17,"end":65}},"sink":{"start":80,"end":80,"column":{"start":17,"end":65},"content":""},"parent_line_number":80,"fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_3","old_fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_31","code_extract":"                password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":99,"full_filename":"test\\api\\erasureRequestApiSpec.ts","filename":"test\\api\\erasureRequestApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":99,"end":99,"column":{"start":9,"end":57}},"sink":{"start":99,"end":99,"column":{"start":9,"end":57},"content":""},"parent_line_number":99,"fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_4","old_fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_39","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":119,"full_filename":"test\\api\\erasureRequestApiSpec.ts","filename":"test\\api\\erasureRequestApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":119,"end":119,"column":{"start":9,"end":57}},"sink":{"start":119,"end":119,"column":{"start":9,"end":57},"content":""},"parent_line_number":119,"fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_5","old_fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_50","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":140,"full_filename":"test\\api\\erasureRequestApiSpec.ts","filename":"test\\api\\erasureRequestApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":140,"end":140,"column":{"start":9,"end":57}},"sink":{"start":140,"end":140,"column":{"start":9,"end":57},"content":""},"parent_line_number":140,"fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_6","old_fingerprint":"2e5de78b8d43d1f71fb769b5b84d49ed_57","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":26,"full_filename":"test\\api\\memoryApiSpec.ts","filename":"test\\api\\memoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":26,"end":26,"column":{"start":9,"end":29}},"sink":{"start":26,"end":26,"column":{"start":9,"end":29},"content":""},"parent_line_number":26,"fingerprint":"78825d2c8627dd08dd69c381fb2b88c8_0","old_fingerprint":"78825d2c8627dd08dd69c381fb2b88c8_12","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":64,"full_filename":"test\\api\\memoryApiSpec.ts","filename":"test\\api\\memoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":64,"end":64,"column":{"start":9,"end":29}},"sink":{"start":64,"end":64,"column":{"start":9,"end":29},"content":""},"parent_line_number":64,"fingerprint":"78825d2c8627dd08dd69c381fb2b88c8_1","old_fingerprint":"78825d2c8627dd08dd69c381fb2b88c8_26","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":91,"full_filename":"test\\api\\memoryApiSpec.ts","filename":"test\\api\\memoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":91,"end":91,"column":{"start":9,"end":29}},"sink":{"start":91,"end":91,"column":{"start":9,"end":29},"content":""},"parent_line_number":91,"fingerprint":"78825d2c8627dd08dd69c381fb2b88c8_2","old_fingerprint":"78825d2c8627dd08dd69c381fb2b88c8_36","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":19,"full_filename":"test\\api\\orderHistoryApiSpec.ts","filename":"test\\api\\orderHistoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":19,"end":19,"column":{"start":9,"end":29}},"sink":{"start":19,"end":19,"column":{"start":9,"end":29},"content":""},"parent_line_number":19,"fingerprint":"80db81597b4bb47ae714874f4c4b5d18_0","old_fingerprint":"80db81597b4bb47ae714874f4c4b5d18_2","code_extract":"        password: 'admin123'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":56,"full_filename":"test\\api\\orderHistoryApiSpec.ts","filename":"test\\api\\orderHistoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":56,"end":56,"column":{"start":9,"end":29}},"sink":{"start":56,"end":56,"column":{"start":9,"end":29},"content":""},"parent_line_number":56,"fingerprint":"80db81597b4bb47ae714874f4c4b5d18_1","old_fingerprint":"80db81597b4bb47ae714874f4c4b5d18_23","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":73,"full_filename":"test\\api\\orderHistoryApiSpec.ts","filename":"test\\api\\orderHistoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":73,"end":73,"column":{"start":9,"end":29}},"sink":{"start":73,"end":73,"column":{"start":9,"end":29},"content":""},"parent_line_number":73,"fingerprint":"80db81597b4bb47ae714874f4c4b5d18_2","old_fingerprint":"80db81597b4bb47ae714874f4c4b5d18_29","code_extract":"        password: 'admin123'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":90,"full_filename":"test\\api\\orderHistoryApiSpec.ts","filename":"test\\api\\orderHistoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":90,"end":90,"column":{"start":9,"end":47}},"sink":{"start":90,"end":90,"column":{"start":9,"end":47},"content":""},"parent_line_number":90,"fingerprint":"80db81597b4bb47ae714874f4c4b5d18_3","old_fingerprint":"80db81597b4bb47ae714874f4c4b5d18_35","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":109,"full_filename":"test\\api\\orderHistoryApiSpec.ts","filename":"test\\api\\orderHistoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":109,"end":109,"column":{"start":9,"end":29}},"sink":{"start":109,"end":109,"column":{"start":9,"end":29},"content":""},"parent_line_number":109,"fingerprint":"80db81597b4bb47ae714874f4c4b5d18_4","old_fingerprint":"80db81597b4bb47ae714874f4c4b5d18_44","code_extract":"        password: 'admin123'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":129,"full_filename":"test\\api\\orderHistoryApiSpec.ts","filename":"test\\api\\orderHistoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":129,"end":129,"column":{"start":9,"end":29}},"sink":{"start":129,"end":129,"column":{"start":9,"end":29},"content":""},"parent_line_number":129,"fingerprint":"80db81597b4bb47ae714874f4c4b5d18_5","old_fingerprint":"80db81597b4bb47ae714874f4c4b5d18_53","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":149,"full_filename":"test\\api\\orderHistoryApiSpec.ts","filename":"test\\api\\orderHistoryApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":149,"end":149,"column":{"start":9,"end":47}},"sink":{"start":149,"end":149,"column":{"start":9,"end":47},"content":""},"parent_line_number":149,"fingerprint":"80db81597b4bb47ae714874f4c4b5d18_6","old_fingerprint":"80db81597b4bb47ae714874f4c4b5d18_58","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":20,"full_filename":"test\\api\\paymentApiSpec.ts","filename":"test\\api\\paymentApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":20,"end":20,"column":{"start":7,"end":27}},"sink":{"start":20,"end":20,"column":{"start":7,"end":27},"content":""},"parent_line_number":20,"fingerprint":"b22036d0b9597d12c080e576c320b24e_0","old_fingerprint":"b22036d0b9597d12c080e576c320b24e_5","code_extract":"      password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":111,"full_filename":"test\\api\\productReviewApiSpec.ts","filename":"test\\api\\productReviewApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":111,"end":111,"column":{"start":9,"end":57}},"sink":{"start":111,"end":111,"column":{"start":9,"end":57},"content":""},"parent_line_number":111,"fingerprint":"7ee52987fff4c696dbff2fc915934300_0","old_fingerprint":"7ee52987fff4c696dbff2fc915934300_46","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":131,"full_filename":"test\\api\\productReviewApiSpec.ts","filename":"test\\api\\productReviewApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":131,"end":131,"column":{"start":9,"end":57}},"sink":{"start":131,"end":131,"column":{"start":9,"end":57},"content":""},"parent_line_number":131,"fingerprint":"7ee52987fff4c696dbff2fc915934300_1","old_fingerprint":"7ee52987fff4c696dbff2fc915934300_54","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":25,"full_filename":"test\\api\\profileImageUploadSpec.ts","filename":"test\\api\\profileImageUploadSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":25,"end":25,"column":{"start":9,"end":29}},"sink":{"start":25,"end":25,"column":{"start":9,"end":29},"content":""},"parent_line_number":25,"fingerprint":"b7cc9ec8422747d4380f1e7d9570f5f9_0","old_fingerprint":"b7cc9ec8422747d4380f1e7d9570f5f9_11","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":52,"full_filename":"test\\api\\profileImageUploadSpec.ts","filename":"test\\api\\profileImageUploadSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":52,"end":52,"column":{"start":9,"end":29}},"sink":{"start":52,"end":52,"column":{"start":9,"end":29},"content":""},"parent_line_number":52,"fingerprint":"b7cc9ec8422747d4380f1e7d9570f5f9_1","old_fingerprint":"b7cc9ec8422747d4380f1e7d9570f5f9_20","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":97,"full_filename":"test\\api\\profileImageUploadSpec.ts","filename":"test\\api\\profileImageUploadSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":97,"end":97,"column":{"start":9,"end":29}},"sink":{"start":97,"end":97,"column":{"start":9,"end":29},"content":""},"parent_line_number":97,"fingerprint":"b7cc9ec8422747d4380f1e7d9570f5f9_2","old_fingerprint":"b7cc9ec8422747d4380f1e7d9570f5f9_38","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":123,"full_filename":"test\\api\\profileImageUploadSpec.ts","filename":"test\\api\\profileImageUploadSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":123,"end":123,"column":{"start":9,"end":29}},"sink":{"start":123,"end":123,"column":{"start":9,"end":29},"content":""},"parent_line_number":123,"fingerprint":"b7cc9ec8422747d4380f1e7d9570f5f9_3","old_fingerprint":"b7cc9ec8422747d4380f1e7d9570f5f9_51","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":21,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":21,"end":21,"column":{"start":9,"end":29}},"sink":{"start":21,"end":21,"column":{"start":9,"end":29},"content":""},"parent_line_number":21,"fingerprint":"a190895ceafe802d92a27140f298727a_0","old_fingerprint":"a190895ceafe802d92a27140f298727a_7","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":38,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":38,"end":38,"column":{"start":9,"end":29}},"sink":{"start":38,"end":38,"column":{"start":9,"end":29},"content":""},"parent_line_number":38,"fingerprint":"a190895ceafe802d92a27140f298727a_1","old_fingerprint":"a190895ceafe802d92a27140f298727a_15","code_extract":"        password: 'admin123'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":55,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":55,"end":55,"column":{"start":9,"end":47}},"sink":{"start":55,"end":55,"column":{"start":9,"end":47},"content":""},"parent_line_number":55,"fingerprint":"a190895ceafe802d92a27140f298727a_2","old_fingerprint":"a190895ceafe802d92a27140f298727a_22","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":72,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":72,"end":72,"column":{"start":9,"end":29}},"sink":{"start":72,"end":72,"column":{"start":9,"end":29},"content":""},"parent_line_number":72,"fingerprint":"a190895ceafe802d92a27140f298727a_3","old_fingerprint":"a190895ceafe802d92a27140f298727a_28","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":93,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":93,"end":93,"column":{"start":9,"end":29}},"sink":{"start":93,"end":93,"column":{"start":9,"end":29},"content":""},"parent_line_number":93,"fingerprint":"a190895ceafe802d92a27140f298727a_4","old_fingerprint":"a190895ceafe802d92a27140f298727a_37","code_extract":"        password: 'admin123'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":114,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":114,"end":114,"column":{"start":9,"end":47}},"sink":{"start":114,"end":114,"column":{"start":9,"end":47},"content":""},"parent_line_number":114,"fingerprint":"a190895ceafe802d92a27140f298727a_5","old_fingerprint":"a190895ceafe802d92a27140f298727a_48","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":137,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":137,"end":137,"column":{"start":9,"end":29}},"sink":{"start":137,"end":137,"column":{"start":9,"end":29},"content":""},"parent_line_number":137,"fingerprint":"a190895ceafe802d92a27140f298727a_6","old_fingerprint":"a190895ceafe802d92a27140f298727a_56","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":155,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":155,"end":155,"column":{"start":9,"end":29}},"sink":{"start":155,"end":155,"column":{"start":9,"end":29},"content":""},"parent_line_number":155,"fingerprint":"a190895ceafe802d92a27140f298727a_7","old_fingerprint":"a190895ceafe802d92a27140f298727a_61","code_extract":"        password: 'admin123'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":173,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":173,"end":173,"column":{"start":9,"end":47}},"sink":{"start":173,"end":173,"column":{"start":9,"end":47},"content":""},"parent_line_number":173,"fingerprint":"a190895ceafe802d92a27140f298727a_8","old_fingerprint":"a190895ceafe802d92a27140f298727a_66","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":190,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":190,"end":190,"column":{"start":9,"end":47}},"sink":{"start":190,"end":190,"column":{"start":9,"end":47},"content":""},"parent_line_number":190,"fingerprint":"a190895ceafe802d92a27140f298727a_9","old_fingerprint":"a190895ceafe802d92a27140f298727a_68","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":207,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":207,"end":207,"column":{"start":9,"end":29}},"sink":{"start":207,"end":207,"column":{"start":9,"end":29},"content":""},"parent_line_number":207,"fingerprint":"a190895ceafe802d92a27140f298727a_10","old_fingerprint":"a190895ceafe802d92a27140f298727a_73","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":228,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":228,"end":228,"column":{"start":9,"end":29}},"sink":{"start":228,"end":228,"column":{"start":9,"end":29},"content":""},"parent_line_number":228,"fingerprint":"a190895ceafe802d92a27140f298727a_11","old_fingerprint":"a190895ceafe802d92a27140f298727a_74","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":249,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":249,"end":249,"column":{"start":9,"end":47}},"sink":{"start":249,"end":249,"column":{"start":9,"end":47},"content":""},"parent_line_number":249,"fingerprint":"a190895ceafe802d92a27140f298727a_12","old_fingerprint":"a190895ceafe802d92a27140f298727a_78","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":269,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":269,"end":269,"column":{"start":9,"end":47}},"sink":{"start":269,"end":269,"column":{"start":9,"end":47},"content":""},"parent_line_number":269,"fingerprint":"a190895ceafe802d92a27140f298727a_13","old_fingerprint":"a190895ceafe802d92a27140f298727a_79","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":292,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":292,"end":292,"column":{"start":9,"end":47}},"sink":{"start":292,"end":292,"column":{"start":9,"end":47},"content":""},"parent_line_number":292,"fingerprint":"a190895ceafe802d92a27140f298727a_14","old_fingerprint":"a190895ceafe802d92a27140f298727a_84","code_extract":"        password: 'i am an awesome accountant'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":309,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":309,"end":309,"column":{"start":9,"end":29}},"sink":{"start":309,"end":309,"column":{"start":9,"end":29},"content":""},"parent_line_number":309,"fingerprint":"a190895ceafe802d92a27140f298727a_15","old_fingerprint":"a190895ceafe802d92a27140f298727a_88","code_extract":"        password: 'admin123'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":326,"full_filename":"test\\api\\quantityApiSpec.ts","filename":"test\\api\\quantityApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":326,"end":326,"column":{"start":9,"end":29}},"sink":{"start":326,"end":326,"column":{"start":9,"end":29},"content":""},"parent_line_number":326,"fingerprint":"a190895ceafe802d92a27140f298727a_16","old_fingerprint":"a190895ceafe802d92a27140f298727a_89","code_extract":"        password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":44,"full_filename":"test\\api\\securityAnswerApiSpec.ts","filename":"test\\api\\securityAnswerApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":44,"end":44,"column":{"start":7,"end":24}},"sink":{"start":44,"end":44,"column":{"start":7,"end":24},"content":""},"parent_line_number":44,"fingerprint":"990fbc252f74ee9ba56c93036d5c9b39_0","old_fingerprint":"990fbc252f74ee9ba56c93036d5c9b39_17","code_extract":"      password: '12345'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":42,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":42,"end":42,"column":{"start":9,"end":30}},"sink":{"start":42,"end":42,"column":{"start":9,"end":30},"content":""},"parent_line_number":42,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_0","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_16","code_extract":"        password: 'hooooorst'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":60,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":60,"end":60,"column":{"start":9,"end":30}},"sink":{"start":60,"end":60,"column":{"start":9,"end":30},"content":""},"parent_line_number":60,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_1","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_24","code_extract":"        password: 'hooooorst',"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":82,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":82,"end":82,"column":{"start":9,"end":22}},"sink":{"start":82,"end":82,"column":{"start":9,"end":22},"content":""},"parent_line_number":82,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_2","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_32","code_extract":"        password: ' '"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":100,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":100,"end":100,"column":{"start":9,"end":22}},"sink":{"start":100,"end":100,"column":{"start":9,"end":22},"content":""},"parent_line_number":100,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_3","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_40","code_extract":"        password: ' '"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":106,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":106,"end":106,"column":{"start":9,"end":22}},"sink":{"start":106,"end":106,"column":{"start":9,"end":22},"content":""},"parent_line_number":106,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_4","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_43","code_extract":"        password: ' '"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":118,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":118,"end":118,"column":{"start":9,"end":26}},"sink":{"start":118,"end":118,"column":{"start":9,"end":26},"content":""},"parent_line_number":118,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_5","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_49","code_extract":"        password: ' test'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":136,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":136,"end":136,"column":{"start":9,"end":30}},"sink":{"start":136,"end":136,"column":{"start":9,"end":30},"content":""},"parent_line_number":136,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_6","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_55","code_extract":"        password: 'hooooorst',"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":158,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":158,"end":158,"column":{"start":9,"end":30}},"sink":{"start":158,"end":158,"column":{"start":9,"end":30},"content":""},"parent_line_number":158,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_7","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_62","code_extract":"        password: 'hooooorst',"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":180,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":180,"end":180,"column":{"start":9,"end":30}},"sink":{"start":180,"end":180,"column":{"start":9,"end":30},"content":""},"parent_line_number":180,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_8","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_67","code_extract":"        password: 'hooooorst',"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":199,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":199,"end":199,"column":{"start":11,"end":38}},"sink":{"start":199,"end":199,"column":{"start":11,"end":38},"content":""},"parent_line_number":199,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_9","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_72","code_extract":"          password: 'does.not.matter'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":271,"full_filename":"test\\api\\userApiSpec.ts","filename":"test\\api\\userApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":271,"end":271,"column":{"start":9,"end":57}},"sink":{"start":271,"end":271,"column":{"start":9,"end":57},"content":""},"parent_line_number":271,"fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_10","old_fingerprint":"0bbf5076b70ef9dc94a387061d12d8f2_80","code_extract":"        password: 'bW9jLmxpYW1nQGhjaW5pbW1pay5ucmVvamI='"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":19,"full_filename":"test\\api\\userProfileSpec.ts","filename":"test\\api\\userProfileSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":19,"end":19,"column":{"start":7,"end":27}},"sink":{"start":19,"end":19,"column":{"start":7,"end":27},"content":""},"parent_line_number":19,"fingerprint":"844f44e5e3005deae32bb6f87716e4e5_0","old_fingerprint":"844f44e5e3005deae32bb6f87716e4e5_3","code_extract":"      password: 'ncc-1701'"},{"cwe_ids":["798"],"id":"javascript_lang_hardcoded_secret","title":"Usage of hard-coded secret","description":"## Description\n\nCode is not a safe place to store secrets. Use environment variables or a secret management system instead.\n\n## Remediations\n\n❌ Do not store plaintext secrets in your code\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID: 'my-id-123',\n      clientSecret: 'shh-my-secret',\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use environment variables\n\n```javascript\n  passport.use(new OAuth2Strategy({\n      authorizationURL: 'https://www.example.com/oauth2/authorize',\n      tokenURL: 'https://www.example.com/oauth2/token',\n      clientID:  process.env.CLIENT_ID,\n      clientSecret: process.env.CLIENT_SECRET,\n      callbackURL: 'http://localhost:3000/auth/example/callback'\n    },\n    function(accessToken, refreshToken, profile, cb) {\n      User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n        return cb(err, user);\n      });\n    }\n  ));\n```\n\n✅ Use a secret management system or even better, a key management service (KMS) with encryption, to manage and access your secrets\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n- [Google Cloud Key Management Service](https://cloud.google.com/kms/docs)\n- [AWS Key Management Service](https://aws.amazon.com/kms/)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_hardcoded_secret","line_number":18,"full_filename":"test\\api\\walletApiSpec.ts","filename":"test\\api\\walletApiSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":18,"end":18,"column":{"start":7,"end":23}},"sink":{"start":18,"end":18,"column":{"start":7,"end":23},"content":""},"parent_line_number":18,"fingerprint":"ebe4002bfdd9d7669bec635e4096627f_0","old_fingerprint":"ebe4002bfdd9d7669bec635e4096627f_0","code_extract":"      password: 'demo'"},{"cwe_ids":["798"],"id":"javascript_lang_jwt_hardcoded_secret","title":"Leakage of hard-coded secret in JWT","description":"## Description\n\nCode is not a secure place to store secrets, use environment variables instead.\n\n## Remediations\n\nUse environment variables\n\n```javascript\n  var jwt = require(\"jsonwebtoken\");\n\n  var token = jwt.sign({ foo: \"bar\" }, process.env.JWT_SECRET);\n```\n\n## Resources\n- [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_jwt_hardcoded_secret","line_number":146,"full_filename":"test\\api\\2faSpec.ts","filename":"test\\api\\2faSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":146,"end":149,"column":{"start":31,"end":40}},"sink":{"start":146,"end":149,"column":{"start":31,"end":40},"content":""},"parent_line_number":146,"fingerprint":"5d05b18ac7687ce3855f71b69e7a7f84_0","old_fingerprint":"5d05b18ac7687ce3855f71b69e7a7f84_0","code_extract":"    const tmpTokenWurstbrot = jwt.sign({\n      userId: 10,\n      type: 'password_valid_needs_second_factor_token'\n    }, 'this_surly_isnt_the_right_key')"},{"cwe_ids":["328"],"id":"javascript_lang_weak_hash_md5","title":"Usage of weak hashing library (MD5)","description":"## Description\n\nA weak hashing library can lead to data breaches and greater security risk.\n\n## Remediations\n\nAccording to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), MD5 is considered a weak hash algorithm and therefore shouldn't be used.\n\n✅ Use stronger hashing algorithms when storing data.\n\n```javascript\nconst crypto = require(\"crypto\");\n\nconst key = \"secret key\";\nconst hash = crypto.createHmac(\"es-256-cbc\", key).update(user.password);\n```\n\n## Resources\n- [NodeJS Crypto Module](https://nodejs.org/api/crypto.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_weak_hash_md5","line_number":77,"full_filename":"Gruntfile.js","filename":"Gruntfile.js","category_groups":["PII","Personal Data"],"source":{"start":77,"end":77,"column":{"start":7,"end":25}},"sink":{"start":77,"end":77,"column":{"start":7,"end":25},"content":""},"parent_line_number":77,"fingerprint":"21fa322fb6bf051a5864e6b1e84c7d36_0","old_fingerprint":"21fa322fb6bf051a5864e6b1e84c7d36_0","code_extract":"      md5.update(buffer)"}],"low":[{"cwe_ids":["548"],"id":"javascript_express_exposed_dir_listing","title":"Missing access restriction on directory listing","description":"## Description\nInappropriate exposure of a directory listing could give attackers access to sensitive data or source code, either directly or through exploitation of an exposed file structure.\n\n## Remediations\n✅ Restrict access to sensitive directories and files\n\n## Resources\n- [Express Serve index middleware](https://expressjs.com/en/resources/middleware/serve-index.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_express_exposed_dir_listing","line_number":249,"full_filename":"server.ts","filename":"server.ts","category_groups":["PII","Personal Data"],"source":{"start":249,"end":249,"column":{"start":3,"end":76}},"sink":{"start":249,"end":249,"column":{"start":3,"end":76},"content":""},"parent_line_number":249,"fingerprint":"c539465e8119e4d020831d9f6cf0a973_0","old_fingerprint":"c539465e8119e4d020831d9f6cf0a973_0","code_extract":"  app.use('/ftp', serveIndexMiddleware, serveIndex('ftp', { icons: true })) // vuln-code-snippet vuln-line directoryListingChallenge"},{"cwe_ids":["548"],"id":"javascript_express_exposed_dir_listing","title":"Missing access restriction on directory listing","description":"## Description\nInappropriate exposure of a directory listing could give attackers access to sensitive data or source code, either directly or through exploitation of an exposed file structure.\n\n## Remediations\n✅ Restrict access to sensitive directories and files\n\n## Resources\n- [Express Serve index middleware](https://expressjs.com/en/resources/middleware/serve-index.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_express_exposed_dir_listing","line_number":254,"full_filename":"server.ts","filename":"server.ts","category_groups":["PII","Personal Data"],"source":{"start":254,"end":254,"column":{"start":3,"end":115}},"sink":{"start":254,"end":254,"column":{"start":3,"end":115},"content":""},"parent_line_number":254,"fingerprint":"c539465e8119e4d020831d9f6cf0a973_1","old_fingerprint":"c539465e8119e4d020831d9f6cf0a973_1","code_extract":"  app.use('/encryptionkeys', serveIndexMiddleware, serveIndex('encryptionkeys', { icons: true, view: 'details' }))"},{"cwe_ids":["548"],"id":"javascript_express_exposed_dir_listing","title":"Missing access restriction on directory listing","description":"## Description\nInappropriate exposure of a directory listing could give attackers access to sensitive data or source code, either directly or through exploitation of an exposed file structure.\n\n## Remediations\n✅ Restrict access to sensitive directories and files\n\n## Resources\n- [Express Serve index middleware](https://expressjs.com/en/resources/middleware/serve-index.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_express_exposed_dir_listing","line_number":258,"full_filename":"server.ts","filename":"server.ts","category_groups":["PII","Personal Data"],"source":{"start":258,"end":258,"column":{"start":3,"end":103}},"sink":{"start":258,"end":258,"column":{"start":3,"end":103},"content":""},"parent_line_number":258,"fingerprint":"c539465e8119e4d020831d9f6cf0a973_2","old_fingerprint":"c539465e8119e4d020831d9f6cf0a973_2","code_extract":"  app.use('/support/logs', serveIndexMiddleware, serveIndex('logs', { icons: true, view: 'details' })) // vuln-code-snippet vuln-line accessLogDisclosureChallenge"},{"cwe_ids":["319"],"id":"javascript_express_https_protocol_missing","title":"Missing secure HTTP server configuration","description":"## Description\nUse HTTPS wherever possible. HTTPS uses the TLS (Transport Layer Security) protocol to encrypt communication, making it more secure than HTTP.\n\n## Remediations\n✅ Use the `https` module when calling `createServer()`\n\n```javascript\nvar https = require('https');\nvar express = require('express');\nvar app = express();\n\nvar httpsServer = https.createServer(app)\nhttpsServer.listen(8080);\n```\n\n## Resources\n- [Express Security Best Practices: use TLS](https://expressjs.com/en/advanced/best-practice-security.html#use-tls)\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_express_https_protocol_missing","line_number":57,"full_filename":"test\\server\\preconditionValidationSpec.ts","filename":"test\\server\\preconditionValidationSpec.ts","category_groups":["PII","Personal Data"],"source":{"start":57,"end":57,"column":{"start":26,"end":44}},"sink":{"start":57,"end":57,"column":{"start":26,"end":44},"content":""},"parent_line_number":57,"fingerprint":"93b469b0f1d774c6c89d21769cbe12eb_0","old_fingerprint":"93b469b0f1d774c6c89d21769cbe12eb_0","code_extract":"      const testServer = net.createServer()"}],"warning":[{"cwe_ids":["532"],"id":"javascript_lang_logger_leak","title":"Leakage of information in logger message","description":"## Description\n\nLeaking data to loggers is a common cause of data leaks and can lead to data breaches. This rule looks for instances of data sent to loggers.\n\n## Remediations\n\n❌ Avoid using data in logger messages:\n\n```javascript\nlogger.info(`Results: ${data}`)\n```\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_logger_leak","line_number":475,"full_filename":"server.ts","filename":"server.ts","category_groups":["PII","Personal Data"],"source":{"start":475,"end":475,"column":{"start":11,"end":27}},"sink":{"start":475,"end":475,"column":{"start":11,"end":27},"content":""},"parent_line_number":475,"fingerprint":"602478eb7d16a5a0e5086caf562308ec_0","old_fingerprint":"602478eb7d16a5a0e5086caf562308ec_0","code_extract":"          console.log(err)"},{"cwe_ids":["532"],"id":"javascript_lang_logger_leak","title":"Leakage of information in logger message","description":"## Description\n\nLeaking data to loggers is a common cause of data leaks and can lead to data breaches. This rule looks for instances of data sent to loggers.\n\n## Remediations\n\n❌ Avoid using data in logger messages:\n\n```javascript\nlogger.info(`Results: ${data}`)\n```\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_logger_leak","line_number":636,"full_filename":"server.ts","filename":"server.ts","category_groups":["PII","Personal Data"],"source":{"start":636,"end":636,"column":{"start":3,"end":21}},"sink":{"start":636,"end":636,"column":{"start":3,"end":21},"content":""},"parent_line_number":636,"fingerprint":"602478eb7d16a5a0e5086caf562308ec_1","old_fingerprint":"602478eb7d16a5a0e5086caf562308ec_1","code_extract":"  console.error(err)"},{"cwe_ids":["532"],"id":"javascript_lang_logger_leak","title":"Leakage of information in logger message","description":"## Description\n\nLeaking data to loggers is a common cause of data leaks and can lead to data breaches. This rule looks for instances of data sent to loggers.\n\n## Remediations\n\n❌ Avoid using data in logger messages:\n\n```javascript\nlogger.info(`Results: ${data}`)\n```\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_logger_leak","line_number":669,"full_filename":"server.ts","filename":"server.ts","category_groups":["PII","Personal Data"],"source":{"start":669,"end":669,"column":{"start":3,"end":193}},"sink":{"start":669,"end":669,"column":{"start":3,"end":193},"content":""},"parent_line_number":669,"fingerprint":"602478eb7d16a5a0e5086caf562308ec_2","old_fingerprint":"602478eb7d16a5a0e5086caf562308ec_2","code_extract":"  logger.info(`Entity models ${colors.bold(Object.keys(sequelize.models).length.toString())} of ${colors.bold(expectedModels.length.toString())} are initialized (${colors.yellow('WAITING')})`)"},{"cwe_ids":["532"],"id":"javascript_lang_logger_leak","title":"Leakage of information in logger message","description":"## Description\n\nLeaking data to loggers is a common cause of data leaks and can lead to data breaches. This rule looks for instances of data sent to loggers.\n\n## Remediations\n\n❌ Avoid using data in logger messages:\n\n```javascript\nlogger.info(`Results: ${data}`)\n```\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_logger_leak","line_number":671,"full_filename":"server.ts","filename":"server.ts","category_groups":["PII","Personal Data"],"source":{"start":671,"end":671,"column":{"start":1,"end":185}},"sink":{"start":671,"end":671,"column":{"start":1,"end":185},"content":""},"parent_line_number":671,"fingerprint":"602478eb7d16a5a0e5086caf562308ec_3","old_fingerprint":"602478eb7d16a5a0e5086caf562308ec_3","code_extract":"logger.info(`Entity models ${colors.bold(Object.keys(sequelize.models).length.toString())} of ${colors.bold(expectedModels.length.toString())} are initialized (${colors.green('OK')})`)"},{"cwe_ids":["532"],"id":"javascript_lang_logger_leak","title":"Leakage of information in logger message","description":"## Description\n\nLeaking data to loggers is a common cause of data leaks and can lead to data breaches. This rule looks for instances of data sent to loggers.\n\n## Remediations\n\n❌ Avoid using data in logger messages:\n\n```javascript\nlogger.info(`Results: ${data}`)\n```\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_logger_leak","line_number":695,"full_filename":"server.ts","filename":"server.ts","category_groups":["PII","Personal Data"],"source":{"start":695,"end":695,"column":{"start":5,"end":83}},"sink":{"start":695,"end":695,"column":{"start":5,"end":83},"content":""},"parent_line_number":695,"fingerprint":"602478eb7d16a5a0e5086caf562308ec_4","old_fingerprint":"602478eb7d16a5a0e5086caf562308ec_4","code_extract":"    logger.info(colors.cyan(`Server listening on port ${colors.bold(`${port}`)}`))"},{"cwe_ids":["532"],"id":"javascript_lang_logger_leak","title":"Leakage of information in logger message","description":"## Description\n\nLeaking data to loggers is a common cause of data leaks and can lead to data breaches. This rule looks for instances of data sent to loggers.\n\n## Remediations\n\n❌ Avoid using data in logger messages:\n\n```javascript\nlogger.info(`Results: ${data}`)\n```\n","documentation_url":"https://docs.bearer.com/reference/rules/javascript_lang_logger_leak","line_number":698,"full_filename":"server.ts","filename":"server.ts","category_groups":["PII","Personal Data"],"source":{"start":698,"end":698,"column":{"start":7,"end":120}},"sink":{"start":698,"end":698,"column":{"start":7,"end":120},"content":""},"parent_line_number":698,"fingerprint":"602478eb7d16a5a0e5086caf562308ec_5","old_fingerprint":"602478eb7d16a5a0e5086caf562308ec_5","code_extract":"      logger.info(colors.cyan(`Server using proxy base path ${colors.bold(`${process.env.BASE_PATH}`)} for redirects`))"}]}
